import cv2
import numpy as np

# Load the image
image = cv2.imread('chessboard.jpg')
gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

# Apply adaptive thresholding
thresh = cv2.adaptiveThreshold(
    gray, 255, cv2.ADAPTIVE_THRESH_GAUSSIAN_C, cv2.THRESH_BINARY_INV, 11, 2
)

# Find contours (to detect the grid)
contours, _ = cv2.findContours(thresh, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

# Sort contours by area (largest contour should be the chessboard)
contours = sorted(contours, key=cv2.contourArea, reverse=True)

for contour in contours:
    # Approximate the contour
    epsilon = 0.02 * cv2.arcLength(contour, True)
    approx = cv2.approxPolyDP(contour, epsilon, True)

    # If the contour has 4 sides, we assume it's the chessboard
    if len(approx) == 4:
        print("Chessboard detected!")
        cv2.drawContours(image, [approx], -1, (0, 255, 0), 3)
        break

# Display the image with detected grid
cv2.imshow('Detected Chessboard', image)
cv2.waitKey(0)
cv2.destroyAllWindows()